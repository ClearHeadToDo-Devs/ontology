{
  "metadata": {
    "description": "Actions Vocabulary v3 - JTD Type Definitions",
    "version": "3.1.0"
  },
  "definitions": {
    "BFO_0000003": {
      "metadata": {
        "description": "BFO: An entity that unfolds over time and has temporal parts. Processes, events, and temporal regions are occurrents.",
        "javaPackage": "io.clearhead.actions",
        "typescriptType": "BFO_0000003"
      }
    },
    "BFO_0000019": {
      "metadata": {
        "description": "BFO: A specifically dependent continuant that inheres in a bearer. Examples: temperature, color, state.",
        "javaPackage": "io.clearhead.actions",
        "typescriptType": "BFO_0000019"
      }
    },
    "ActionPlan": {
      "metadata": {
        "description": "ActionPlans are BFO continuants (generically dependent continuants) that exist across time and can prescribe multiple action processes. An action plan can be executed multiple times (e.g., recurring actions). Closely aligned with Schema.org Action semantics via SKOS mapping.",
        "javaPackage": "io.clearhead.actions",
        "typescriptType": "ActionPlan"
      },
      "optionalProperties": {
        "hasContext": {
          "elements": {
            "type": "string"
          }
        },
        "hasPriority": {
          "elements": {
            "type": "string"
          }
        },
        "cannotStartUntil": {
          "elements": {
            "type": "string"
          }
        },
        "assignedToAgent": {
          "elements": {
            "type": "string"
          }
        },
        "mustCompleteBefore": {
          "elements": {
            "type": "string"
          }
        },
        "delegatedBy": {
          "elements": {
            "type": "string"
          }
        },
        "canRunInParallel": {
          "elements": {
            "type": "string"
          }
        },
        "inRoleContext": {
          "elements": {
            "type": "string"
          }
        },
        "prescribes": {
          "elements": {
            "type": "string"
          }
        },
        "preferredAfter": {
          "elements": {
            "type": "string"
          }
        },
        "dependsOn": {
          "elements": {
            "type": "string"
          }
        },
        "requiresContext": {
          "elements": {
            "type": "string"
          }
        }
      }
    },
    "ActionProcess": {
      "metadata": {
        "description": "ActionProcesses are BFO occurrents (processes) that unfold over time and have temporal parts. They are prescribed by ActionPlans and represent the concrete realization of the plan's directives. Each execution of an action plan creates a distinct action process.",
        "javaPackage": "io.clearhead.actions",
        "typescriptType": "ActionProcess"
      },
      "optionalProperties": {
        "performedBy": {
          "elements": {
            "type": "string"
          }
        },
        "blockedBy": {
          "elements": {
            "type": "string"
          }
        },
        "hasState": {
          "enum": [
            "NotStarted",
            "InProgress",
            "Completed",
            "Blocked",
            "Cancelled"
          ]
        }
      }
    },
    "RootActionPlan": {
      "metadata": {
        "description": "A top-level action plan at hierarchical depth 0. Root action plans can belong to projects and serve as parents to child action plans. They cannot have parent actions.",
        "javaPackage": "io.clearhead.actions",
        "typescriptType": "RootActionPlan"
      },
      "optionalProperties": {
        "hasProject": {
          "elements": {
            "type": "string"
          }
        },
        "hasContext": {
          "elements": {
            "type": "string"
          }
        },
        "hasPriority": {
          "elements": {
            "type": "string"
          }
        },
        "cannotStartUntil": {
          "elements": {
            "type": "string"
          }
        },
        "assignedToAgent": {
          "elements": {
            "type": "string"
          }
        },
        "mustCompleteBefore": {
          "elements": {
            "type": "string"
          }
        },
        "delegatedBy": {
          "elements": {
            "type": "string"
          }
        },
        "canRunInParallel": {
          "elements": {
            "type": "string"
          }
        },
        "inRoleContext": {
          "elements": {
            "type": "string"
          }
        },
        "prescribes": {
          "elements": {
            "type": "string"
          }
        },
        "preferredAfter": {
          "elements": {
            "type": "string"
          }
        },
        "dependsOn": {
          "elements": {
            "type": "string"
          }
        },
        "requiresContext": {
          "elements": {
            "type": "string"
          }
        }
      }
    },
    "ChildActionPlan": {
      "metadata": {
        "description": "An intermediate action plan at hierarchical depths 1-4. Child action plans must have a parent action and may have child or leaf action plans as parts.",
        "javaPackage": "io.clearhead.actions",
        "typescriptType": "ChildActionPlan"
      },
      "optionalProperties": {
        "hasContext": {
          "elements": {
            "type": "string"
          }
        },
        "hasPriority": {
          "elements": {
            "type": "string"
          }
        },
        "cannotStartUntil": {
          "elements": {
            "type": "string"
          }
        },
        "assignedToAgent": {
          "elements": {
            "type": "string"
          }
        },
        "mustCompleteBefore": {
          "elements": {
            "type": "string"
          }
        },
        "delegatedBy": {
          "elements": {
            "type": "string"
          }
        },
        "canRunInParallel": {
          "elements": {
            "type": "string"
          }
        },
        "inRoleContext": {
          "elements": {
            "type": "string"
          }
        },
        "prescribes": {
          "elements": {
            "type": "string"
          }
        },
        "preferredAfter": {
          "elements": {
            "type": "string"
          }
        },
        "dependsOn": {
          "elements": {
            "type": "string"
          }
        },
        "requiresContext": {
          "elements": {
            "type": "string"
          }
        }
      }
    },
    "LeafActionPlan": {
      "metadata": {
        "description": "A terminal action plan at hierarchical depth 5 (maximum). Leaf action plans must have a parent child action and cannot have children of their own.",
        "javaPackage": "io.clearhead.actions",
        "typescriptType": "LeafActionPlan"
      },
      "optionalProperties": {
        "hasContext": {
          "elements": {
            "type": "string"
          }
        },
        "hasPriority": {
          "elements": {
            "type": "string"
          }
        },
        "cannotStartUntil": {
          "elements": {
            "type": "string"
          }
        },
        "assignedToAgent": {
          "elements": {
            "type": "string"
          }
        },
        "mustCompleteBefore": {
          "elements": {
            "type": "string"
          }
        },
        "delegatedBy": {
          "elements": {
            "type": "string"
          }
        },
        "canRunInParallel": {
          "elements": {
            "type": "string"
          }
        },
        "inRoleContext": {
          "elements": {
            "type": "string"
          }
        },
        "prescribes": {
          "elements": {
            "type": "string"
          }
        },
        "preferredAfter": {
          "elements": {
            "type": "string"
          }
        },
        "dependsOn": {
          "elements": {
            "type": "string"
          }
        },
        "requiresContext": {
          "elements": {
            "type": "string"
          }
        }
      }
    },
    "ActionState": {
      "metadata": {
        "description": "An enumeration of states that an action process can be in. These are BFO qualities that inhere in action processes.",
        "javaPackage": "io.clearhead.actions",
        "typescriptType": "ActionState"
      }
    },
    "ActionContext": {
      "metadata": {
        "description": "Contexts are continuants (information entities) that persist and can be reused across multiple action plans. They prescribe what resources or conditions are needed for execution. GTD pattern: Replaces string-based @context tags with typed entities.",
        "javaPackage": "io.clearhead.actions",
        "typescriptType": "ActionContext"
      }
    },
    "LocationContext": {
      "metadata": {
        "description": "Links to CCO Facility hierarchy (47+ facility types). GTD use case: @office, @home, @errands contexts.",
        "javaPackage": "io.clearhead.actions",
        "typescriptType": "LocationContext"
      },
      "optionalProperties": {
        "requiresFacility": {
          "elements": {
            "type": "string"
          }
        }
      }
    },
    "ToolContext": {
      "metadata": {
        "description": "Links to CCO Artifact hierarchy (200+ artifact types). GTD use case: @computer, @phone, @online contexts.",
        "javaPackage": "io.clearhead.actions",
        "typescriptType": "ToolContext"
      },
      "optionalProperties": {
        "requiresArtifact": {
          "elements": {
            "type": "string"
          }
        }
      }
    },
    "EnergyContext": {
      "metadata": {
        "description": "Based on GTD principle that energy is a limiting resource alongside time and tools. Levels: high, medium, low.",
        "javaPackage": "io.clearhead.actions",
        "typescriptType": "EnergyContext"
      },
      "optionalProperties": {
        "hasEnergyLevel": {
          "elements": {
            "type": "string"
          }
        }
      }
    },
    "SocialContext": {
      "metadata": {
        "description": "Links to CCO Agent (Person, Organization, Group). GTD use case: @agenda contexts (discuss with specific person).",
        "javaPackage": "io.clearhead.actions",
        "typescriptType": "SocialContext"
      },
      "optionalProperties": {
        "requiresAgent": {
          "elements": {
            "type": "string"
          }
        }
      }
    },
    "Milestone": {
      "metadata": {
        "description": "Milestones represent completion of a set of actions and mark significant progress points. Typically don't prescribe processes themselves.",
        "javaPackage": "io.clearhead.actions",
        "typescriptType": "Milestone"
      },
      "optionalProperties": {
        "hasProject": {
          "elements": {
            "type": "string"
          }
        },
        "hasContext": {
          "elements": {
            "type": "string"
          }
        },
        "hasPriority": {
          "elements": {
            "type": "string"
          }
        },
        "cannotStartUntil": {
          "elements": {
            "type": "string"
          }
        },
        "assignedToAgent": {
          "elements": {
            "type": "string"
          }
        },
        "mustCompleteBefore": {
          "elements": {
            "type": "string"
          }
        },
        "delegatedBy": {
          "elements": {
            "type": "string"
          }
        },
        "canRunInParallel": {
          "elements": {
            "type": "string"
          }
        },
        "inRoleContext": {
          "elements": {
            "type": "string"
          }
        },
        "prescribes": {
          "elements": {
            "type": "string"
          }
        },
        "preferredAfter": {
          "elements": {
            "type": "string"
          }
        },
        "dependsOn": {
          "elements": {
            "type": "string"
          }
        },
        "requiresContext": {
          "elements": {
            "type": "string"
          }
        }
      }
    }
  }
}